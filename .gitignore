#!/user/bin
# -*- coding:utf-8 -*-

##Importlar

import random

##Kolaylık Olsun Diye Printleri Baştan Ayarlıyorum

first_opponent_message = '———– İlk Kahraman ———–'
second_opponent_message = '———– İkinci Kahraman ———–'
name_prompt_message = 'Lütfen kahramanınızın adını yazın: '
name_invalid_message = ' alındı, lütfen başka bir isim seçin!'
heads_tails_message = 'Yazı tura sonucu: {} önce başlar!'
attack_message = '———– {} Saldırı !! ———–'
attack_magnitude_selection_message = 'Saldırı büyüklüğünüzü 1 ile 50 arasında seçin: '
attack_magnitude_invalid_message = 'Saldırı büyüklüğü 1 ile 50 arasında olmalıdır.'
attack_missed_message = 'Ooopsy! {} saldırıyı kaçırdı!'
attack_report_message = '{} {} hasar verdi !!'
thx4play = 'Oynadığın İçin Teşekkür Ederim!!!'
game_over_report = '''########################################################
######################### {} kazandı !!#######################
########################################################'''
player_choice_print = 'Devam Etmek İçin Y/N'
wrong_input = 'Lütfen Sadece Y/N giriniz.'
turn = 0

##Kullanıcıların Canını 100 e Eşitleme

first_opponent_health = 100
second_opponent_health = 100

##Basit İsim Alma İnputları

print(first_opponent_message)
first_opponent_name = input(name_prompt_message)

print(second_opponent_message)
second_opponent_name = input(name_prompt_message)

while first_opponent_name == second_opponent_name:
    print(second_opponent_name + name_invalid_message + '\n' + second_opponent_message)
    second_opponent_name = input(name_prompt_message)

##Can Grafiği 

def print_healths():
    global first_opponent_name, second_opponent_name, first_opponent_health, second_opponent_health
    print(first_opponent_name.ljust(70) + second_opponent_name.ljust(70))
    print(str(f'HP[{first_opponent_health}]:' + '|' * int(first_opponent_health / 2)).ljust(70) + str(f'HP[{second_opponent_health}]:' + '|' * int(second_opponent_health / 2)).ljust(70))

##Hasar Girdisi Alma

def get_attack_value():
    value = int(input(attack_magnitude_selection_message))
    while not 1 <= value <= 50:
        print(attack_magnitude_invalid_message)
        value = int(input(attack_magnitude_selection_message))

##Missleme Şansı
##(Bir hasar girildiğinde örn: 50 yukarda hasar girdisi alma kısmında value inputu alıyoruz ve aşağıda random değerinden cıkarıyoruz örn// 50 yazdığımız zaman 100 - 50den %50 şansla saldırındın başarılı olma ihtinali oluyor)

    if random.randint(1, 100) <= (100 - value):
        return value
    else:
        return 0

##Yazı Tura

def play_game():
    global first_opponent_name, second_opponent_name, first_opponent_health, second_opponent_health
    if random.randint(0, 1) == 0:
        turn = 0
        print(heads_tails_message.format(first_opponent_name))
    else:
        turn = 1
        print(heads_tails_message.format(second_opponent_name))

    while first_opponent_health > 0 and second_opponent_health > 0:
        print_healths()
        if turn == 0:
            print(attack_message.format(first_opponent_name))
            value = get_attack_value()
            if value == 0:
                print(attack_missed_message.format(first_opponent_name))
            else:
                print(attack_report_message.format(first_opponent_name, value))
                second_opponent_health -= value
            turn = 1
        else:
            print(attack_message.format(second_opponent_name))
            value = get_attack_value()
            if value == 0:
                print(attack_missed_message.format(second_opponent_name))
            else:
                print(attack_report_message.format(second_opponent_name, value))
                first_opponent_health -= value
            turn = 0

    ##Olum Raporu 

    if first_opponent_health > 0:
        print(game_over_report.format(first_opponent_name))
    else: 
        print(game_over_report.format(second_opponent_name))

def cleanup():
    global first_opponent_health,second_opponent_health
    first_opponent_health = 100
    second_opponent_health = 100

play_game()   

##Tekrar Başlama

player_choice = input(player_choice_print)
while player_choice.upper() != 'Y' and player_choice.upper() != 'N':
    print(wrong_input)
    player_choice = input(player_choice_print)

while player_choice.upper() == 'Y':
    cleanup()
    play_game()
    player_choice = input(player_choice_print)
    while player_choice.upper() != 'Y' and player_choice.upper() != 'N':
        print(wrong_input)
        player_choice = input(player_choice_print)

print(thx4play)
